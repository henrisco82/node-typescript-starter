paths:
  /orders/{id}/delivered:
    get:
      tags:
        - orders
      summary: Mark order as delivered
      description: Mark order as delivered
      operationId: markOrderAsDelivered
      parameters:
        - name: id
          in: path
          required: true
          description: Order id
          schema:
            type: string
            format: _id
      requestBody:
        required: false
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errUnauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errNotFound'

  /orders/{id}/pay:
    get:
      tags:
        - orders
      summary: Pay order
      description: Pay for order
      operationId: payOrder
      parameters:
        - name: id
          in: path
          required: true
          description: Order id
          schema:
            type: string
            format: _id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                status:
                  type: string
                update_time:
                  type: string
                payer:
                  type: object
                  properties:
                    email_address:
                      type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errUnauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errNotFound'
  /orders/myorders:
    get:
      tags:
        - orders
      summary: List my orders
      description: List all orders of the logged in user
      operationId: listMyOrders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errUnauthorized'
  /orders/{id}:
    get:
      tags:
        - orders
      summary: Get order
      description: Get order by id
      operationId: getOrder
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Order id
          schema:
            type: string
            format: _id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errUnauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errNotFound'
  /orders:
    post:
      tags:
        - orders
      summary: Create order
      description: Create order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Order'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errUnauthorized'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errBadRequest'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errConflict'
    get:
      tags:
        - orders
      summary: List orders
      description: List all orders
      operationId: listOrders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errUnauthorized'
components:
  schemas:
    Order:
      type: object
      properties:
        shippingAddress:
          type: object
          properties:
            address:
              type: string
            city:
              type: string
            postalCode:
              type: string
            country:
              type: string
        itemsPrice:
          type: number
        _id:
          type: string
        user:
          type: string
        orderItems:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              qty:
                type: number
              image:
                type: string
              price:
                type: number
              product:
                type: string
              _id:
                type: string
        paymentMethod:
          type: string
        taxPrice:
          type: number
        shippingPrice:
          type: number
        totalPrice:
          type: number
        isPaid:
          type: boolean
        isDelivered:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: number
    errUnauthorized:
      type: object
      properties:
        message:
          type: string
    errBadRequest:
      type: object
      properties:
        message:
          type: string
    errConflict:
      type: object
      properties:
        message:
          type: string
